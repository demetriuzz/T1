plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'nu.studer.jooq' version '6.0.1'
}

group = 'ru.demetriuzz'
version = '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

ext {
    // https://docs.spring.io/spring-boot/docs/2.7.3/reference/htmlsingle/#appendix.dependency-versions.properties
    set('postgresqlJdbcVersion', '42.2.14')
    set('jooqVersion', '3.15.1')
    set('testContainersVersion', '1.17.6')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation "org.postgresql:postgresql:${postgresqlJdbcVersion}"
    implementation 'org.liquibase:liquibase-core'
    jooqGenerator "org.postgresql:postgresql:${postgresqlJdbcVersion}"

    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.apache.kafka:kafka-clients:2.8.1'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testImplementation 'org.assertj:assertj-core:3.19.0'

    testImplementation "org.testcontainers:testcontainers:${testContainersVersion}"
    testImplementation "org.testcontainers:junit-jupiter:${testContainersVersion}"
    testImplementation "org.testcontainers:postgresql:${testContainersVersion}"
    // ? testImplementation "org.testcontainers:kafka:${testcontainersVersion}"
}

jooq {
    version = "${jooqVersion}"
    edition = nu.studer.gradle.jooq.JooqEdition.OSS

    configurations {
        main {
            generateSchemaSourceOnCompilation = false

            generationTool {
                logging = org.jooq.meta.jaxb.Logging.ERROR
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = 'jdbc:postgresql://localhost:5432/notes'
                    // ? driver = 'org.testcontainers.jdbc.ContainerDatabaseDriver'
                    // ? url = 'jdbc:tc:postgresql:latest://testcontainers/notes' // System.getenv('DB_T1_JDBC_URL')
                    user = 'postgres' // System.getenv('DB_T1_USERNAME')
                    password = 'postgres' // System.getenv('DB_T1_PASSWORD')
                }
                generator{
                    name = 'org.jooq.codegen.JavaGenerator'
                    database{
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                    }
                    generate{
                    }
                    target{
                        packageName = 'ru.demetriuzz.t1.jooq.notes'
                        directory = 'src/generated/jooq/notes'
                    }
                    strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
            }
        }
    }
}

test {
    useJUnitPlatform()
}
